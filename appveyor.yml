clone_depth: 200
version: '1.0.0-{Build}'

environment:
  matrix:
  # MSVC x86------------------------------------
  - name : msvc_win32_513
    platformEnv: amd64_x86
    qt: 5.13
    compiler: msvc2017

  - name : msvc_win32_512
    platformEnv: amd64_x86
    qt: 5.12.5
    compiler: msvc2017

  # MSVC x64------------------------------------
  - name : msvc_win64_513
    platformEnv: amd64
    qt: 5.13
    compiler: msvc2017_64
    
  - name : msvc_win64_512
    platformEnv: amd64
    qt: 5.12.5
    compiler: msvc2017_64

  # MinGW x32-----------------------------------
  - name: mingw_win32_513
    platformEnv: mingw
    qt: 5.13
    compiler: mingw73_32
    tools: mingw73_32
    
  - name: mingw_win32_512
    platformEnv: mingw
    qt: 5.12.5
    compiler: mingw73_32
    tools: mingw73_32
    
  # MinGW x64-----------------------------------
  - name: mingw_win64_513
    platformEnv: mingw
    qt: 5.13
    compiler: mingw73_64
    tools: mingw73_64
    
  - name: mingw_win64_512
    platformEnv: mingw
    qt: 5.12.5
    compiler: mingw73_64
    tools: mingw73_64

configuration: Release

clone_folder: c:\ci\notes

cache:
  - C:\Program Files (x86)\Inno Setup 5 -> appveyor.yml

install:
  - git submodule update --init --recursive
  - ps: Update-AppveyorBuild -Version "$(git describe --tags $(git rev-list --tags --max-count=1))~git$($env:appveyor_repo_commit.substring(0,7))"
  - setx /m PLATFORMENV %platformEnv%
  - if not exist "C:\Program Files (x86)\Inno Setup 5" choco install innosetup 
  - set PATH=C:\\Program Files (x86)\\Inno Setup 5;%PATH%
  - if %platformEnv%==mingw set PATH=C:\Qt\Tools\%tools%\bin;%PATH%
  - set PATH=C:\Qt\%qt%\%compiler%\bin;%PATH%
  - if %platformEnv%==amd64_32  call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
  - if %platformEnv%==amd64     call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"


build_script:
  - cd C:\ci\notes\src
  - qmake -config release 
  - if not %platformEnv%==mingw (nmake) else (mingw32-make)
  - if not %platformEnv%==mingw (nmake install) else (mingw32-make install)
  - cd C:\ci\notes\bin
  - windeployqt .
#  - if %compiler%==msvc2017 copy "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\redist\\x86\\Microsoft.VC140.CRT\\msvcp140.dll" .
#  - if %compiler%==msvc2017 copy "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\redist\\x86\\Microsoft.VC140.CRT\\vcruntime140.dll" .
#  - if %compiler%==msvc2017_64 copy "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\redist\\x64\\Microsoft.VC140.CRT\\msvcp140.dll" .
#  - if %compiler%==msvc2017_64 copy "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\redist\\x64\\Microsoft.VC140.CRT\\vcruntime140.dll" .
  - iscc C:\ci\notes\packaging\windows\Notes_Inno_Script.iss
  - cd C:\ci\notes\installer
  - dir

on_success:
  - ps: Push-AppveyorArtifact $("NotesSetup_"+$env:APPVEYOR_BUILD_VERSION+"_"+$env:platformEnv+".exe")

artifacts:
  - path: '\bin\Notes.exe'
    name: 'App Executable $(name)'
